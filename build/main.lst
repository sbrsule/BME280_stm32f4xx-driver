ARM GAS  /tmp/ccgFIVOt.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB134:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "BME280.h"
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccgFIVOt.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** UART_HandleTypeDef huart2;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** static void MX_GPIO_Init(void);
  54:Core/Src/main.c **** static void MX_I2C1_Init(void);
  55:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccgFIVOt.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_I2C1_Init();
  94:Core/Src/main.c ****   MX_USART2_UART_Init();
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  96:Core/Src/main.c ****   BME280 bme;
  97:Core/Src/main.c ****   BME280_init(&bme, &hi2c1);
  98:Core/Src/main.c ****   /* USER CODE END 2 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Infinite loop */
 101:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 102:Core/Src/main.c ****   while (1)
 103:Core/Src/main.c ****   {
 104:Core/Src/main.c ****     /* USER CODE END WHILE */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 107:Core/Src/main.c ****   }
 108:Core/Src/main.c ****   /* USER CODE END 3 */
 109:Core/Src/main.c **** }
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /**
 112:Core/Src/main.c ****   * @brief System Clock Configuration
 113:Core/Src/main.c ****   * @retval None
 114:Core/Src/main.c ****   */
 115:Core/Src/main.c **** void SystemClock_Config(void)
 116:Core/Src/main.c **** {
 117:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 118:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 121:Core/Src/main.c ****   */
 122:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 123:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 126:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 127:Core/Src/main.c ****   */
 128:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 137:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 138:Core/Src/main.c ****   {
 139:Core/Src/main.c ****     Error_Handler();
 140:Core/Src/main.c ****   }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 143:Core/Src/main.c ****   */
 144:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 145:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccgFIVOt.s 			page 4


 146:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 152:Core/Src/main.c ****   {
 153:Core/Src/main.c ****     Error_Handler();
 154:Core/Src/main.c ****   }
 155:Core/Src/main.c **** }
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** /**
 158:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 159:Core/Src/main.c ****   * @param None
 160:Core/Src/main.c ****   * @retval None
 161:Core/Src/main.c ****   */
 162:Core/Src/main.c **** static void MX_I2C1_Init(void)
 163:Core/Src/main.c **** {
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 172:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 173:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 174:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 175:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 176:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 177:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 178:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 179:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 180:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 181:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 182:Core/Src/main.c ****   {
 183:Core/Src/main.c ****     Error_Handler();
 184:Core/Src/main.c ****   }
 185:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** }
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** /**
 192:Core/Src/main.c ****   * @brief USART2 Initialization Function
 193:Core/Src/main.c ****   * @param None
 194:Core/Src/main.c ****   * @retval None
 195:Core/Src/main.c ****   */
 196:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 197:Core/Src/main.c **** {
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 202:Core/Src/main.c **** 
ARM GAS  /tmp/ccgFIVOt.s 			page 5


 203:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 206:Core/Src/main.c ****   huart2.Instance = USART2;
 207:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 208:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 209:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 210:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 211:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 212:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 213:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 214:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 215:Core/Src/main.c ****   {
 216:Core/Src/main.c ****     Error_Handler();
 217:Core/Src/main.c ****   }
 218:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** }
 223:Core/Src/main.c **** 
 224:Core/Src/main.c **** /**
 225:Core/Src/main.c ****   * @brief GPIO Initialization Function
 226:Core/Src/main.c ****   * @param None
 227:Core/Src/main.c ****   * @retval None
 228:Core/Src/main.c ****   */
 229:Core/Src/main.c **** static void MX_GPIO_Init(void)
 230:Core/Src/main.c **** {
  28              		.loc 1 230 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 231:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 231 3 view .LVU1
  42              		.loc 1 231 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 232:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 233:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 236:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 236 3 is_stmt 1 view .LVU3
  50              	.LBB4:
ARM GAS  /tmp/ccgFIVOt.s 			page 6


  51              		.loc 1 236 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 236 3 view .LVU5
  54 0012 224B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 236 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 236 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 236 3 view .LVU8
 237:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 237 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 237 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 237 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 237 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0292     		str	r2, [sp, #8]
  78              		.loc 1 237 3 view .LVU13
  79 0038 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 237 3 view .LVU14
 238:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 238 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 238 3 view .LVU16
  85 003a 0394     		str	r4, [sp, #12]
  86              		.loc 1 238 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 238 3 view .LVU18
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 02F00102 		and	r2, r2, #1
  93 004a 0392     		str	r2, [sp, #12]
  94              		.loc 1 238 3 view .LVU19
  95 004c 039A     		ldr	r2, [sp, #12]
  96              	.LBE6:
  97              		.loc 1 238 3 view .LVU20
 239:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 239 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 239 3 view .LVU22
 101 004e 0494     		str	r4, [sp, #16]
 102              		.loc 1 239 3 view .LVU23
 103 0050 1A6B     		ldr	r2, [r3, #48]
 104 0052 42F00202 		orr	r2, r2, #2
ARM GAS  /tmp/ccgFIVOt.s 			page 7


 105 0056 1A63     		str	r2, [r3, #48]
 106              		.loc 1 239 3 view .LVU24
 107 0058 1B6B     		ldr	r3, [r3, #48]
 108 005a 03F00203 		and	r3, r3, #2
 109 005e 0493     		str	r3, [sp, #16]
 110              		.loc 1 239 3 view .LVU25
 111 0060 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 239 3 view .LVU26
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 242:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 114              		.loc 1 242 3 view .LVU27
 115 0062 0F4D     		ldr	r5, .L3+4
 116 0064 2246     		mov	r2, r4
 117 0066 2021     		movs	r1, #32
 118 0068 2846     		mov	r0, r5
 119 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL0:
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 245:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 121              		.loc 1 245 3 view .LVU28
 122              		.loc 1 245 23 is_stmt 0 view .LVU29
 123 006e 4FF40053 		mov	r3, #8192
 124 0072 0593     		str	r3, [sp, #20]
 246:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 125              		.loc 1 246 3 is_stmt 1 view .LVU30
 126              		.loc 1 246 24 is_stmt 0 view .LVU31
 127 0074 4FF40413 		mov	r3, #2162688
 128 0078 0693     		str	r3, [sp, #24]
 247:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 129              		.loc 1 247 3 is_stmt 1 view .LVU32
 130              		.loc 1 247 24 is_stmt 0 view .LVU33
 131 007a 0794     		str	r4, [sp, #28]
 248:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 132              		.loc 1 248 3 is_stmt 1 view .LVU34
 133 007c 05A9     		add	r1, sp, #20
 134 007e 0948     		ldr	r0, .L3+8
 135 0080 FFF7FEFF 		bl	HAL_GPIO_Init
 136              	.LVL1:
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 251:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 137              		.loc 1 251 3 view .LVU35
 138              		.loc 1 251 23 is_stmt 0 view .LVU36
 139 0084 2023     		movs	r3, #32
 140 0086 0593     		str	r3, [sp, #20]
 252:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 141              		.loc 1 252 3 is_stmt 1 view .LVU37
 142              		.loc 1 252 24 is_stmt 0 view .LVU38
 143 0088 0123     		movs	r3, #1
 144 008a 0693     		str	r3, [sp, #24]
 253:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 145              		.loc 1 253 3 is_stmt 1 view .LVU39
 146              		.loc 1 253 24 is_stmt 0 view .LVU40
 147 008c 0794     		str	r4, [sp, #28]
ARM GAS  /tmp/ccgFIVOt.s 			page 8


 254:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 148              		.loc 1 254 3 is_stmt 1 view .LVU41
 149              		.loc 1 254 25 is_stmt 0 view .LVU42
 150 008e 0894     		str	r4, [sp, #32]
 255:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 151              		.loc 1 255 3 is_stmt 1 view .LVU43
 152 0090 05A9     		add	r1, sp, #20
 153 0092 2846     		mov	r0, r5
 154 0094 FFF7FEFF 		bl	HAL_GPIO_Init
 155              	.LVL2:
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 258:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 259:Core/Src/main.c **** }
 156              		.loc 1 259 1 is_stmt 0 view .LVU44
 157 0098 0BB0     		add	sp, sp, #44
 158              	.LCFI2:
 159              		.cfi_def_cfa_offset 12
 160              		@ sp needed
 161 009a 30BD     		pop	{r4, r5, pc}
 162              	.L4:
 163              		.align	2
 164              	.L3:
 165 009c 00380240 		.word	1073887232
 166 00a0 00000240 		.word	1073872896
 167 00a4 00080240 		.word	1073874944
 168              		.cfi_endproc
 169              	.LFE134:
 171              		.section	.text.Error_Handler,"ax",%progbits
 172              		.align	1
 173              		.global	Error_Handler
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 178              	Error_Handler:
 179              	.LFB135:
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c **** /* USER CODE END 4 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c **** /**
 266:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 267:Core/Src/main.c ****   * @retval None
 268:Core/Src/main.c ****   */
 269:Core/Src/main.c **** void Error_Handler(void)
 270:Core/Src/main.c **** {
 180              		.loc 1 270 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ Volatile: function does not return.
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 271:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 272:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 273:Core/Src/main.c ****   __disable_irq();
 186              		.loc 1 273 3 view .LVU46
ARM GAS  /tmp/ccgFIVOt.s 			page 9


 187              	.LBB8:
 188              	.LBI8:
 189              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccgFIVOt.s 			page 10


  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
ARM GAS  /tmp/ccgFIVOt.s 			page 11


 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 190              		.loc 2 140 27 view .LVU47
 191              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 192              		.loc 2 142 3 view .LVU48
 193              		.syntax unified
 194              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 195 0000 72B6     		cpsid i
 196              	@ 0 "" 2
 197              		.thumb
 198              		.syntax unified
 199              	.L6:
 200              	.LBE9:
 201              	.LBE8:
 274:Core/Src/main.c ****   while (1)
 202              		.loc 1 274 3 view .LVU49
 275:Core/Src/main.c ****   {
 276:Core/Src/main.c ****   }
 203              		.loc 1 276 3 view .LVU50
 274:Core/Src/main.c ****   while (1)
 204              		.loc 1 274 9 view .LVU51
 205 0002 FEE7     		b	.L6
 206              		.cfi_endproc
 207              	.LFE135:
 209              		.section	.text.MX_I2C1_Init,"ax",%progbits
 210              		.align	1
 211              		.syntax unified
 212              		.thumb
ARM GAS  /tmp/ccgFIVOt.s 			page 12


 213              		.thumb_func
 215              	MX_I2C1_Init:
 216              	.LFB132:
 163:Core/Src/main.c **** 
 217              		.loc 1 163 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221 0000 08B5     		push	{r3, lr}
 222              	.LCFI3:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
 172:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 226              		.loc 1 172 3 view .LVU53
 172:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 227              		.loc 1 172 18 is_stmt 0 view .LVU54
 228 0002 0A48     		ldr	r0, .L11
 229 0004 0A4B     		ldr	r3, .L11+4
 230 0006 0360     		str	r3, [r0]
 173:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 231              		.loc 1 173 3 is_stmt 1 view .LVU55
 173:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 232              		.loc 1 173 25 is_stmt 0 view .LVU56
 233 0008 0A4B     		ldr	r3, .L11+8
 234 000a 4360     		str	r3, [r0, #4]
 174:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 235              		.loc 1 174 3 is_stmt 1 view .LVU57
 174:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 236              		.loc 1 174 24 is_stmt 0 view .LVU58
 237 000c 0023     		movs	r3, #0
 238 000e 8360     		str	r3, [r0, #8]
 175:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 239              		.loc 1 175 3 is_stmt 1 view .LVU59
 175:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 240              		.loc 1 175 26 is_stmt 0 view .LVU60
 241 0010 C360     		str	r3, [r0, #12]
 176:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 242              		.loc 1 176 3 is_stmt 1 view .LVU61
 176:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 243              		.loc 1 176 29 is_stmt 0 view .LVU62
 244 0012 4FF48042 		mov	r2, #16384
 245 0016 0261     		str	r2, [r0, #16]
 177:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 246              		.loc 1 177 3 is_stmt 1 view .LVU63
 177:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 247              		.loc 1 177 30 is_stmt 0 view .LVU64
 248 0018 4361     		str	r3, [r0, #20]
 178:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 249              		.loc 1 178 3 is_stmt 1 view .LVU65
 178:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 250              		.loc 1 178 26 is_stmt 0 view .LVU66
 251 001a 8361     		str	r3, [r0, #24]
 179:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 252              		.loc 1 179 3 is_stmt 1 view .LVU67
 179:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 253              		.loc 1 179 30 is_stmt 0 view .LVU68
ARM GAS  /tmp/ccgFIVOt.s 			page 13


 254 001c C361     		str	r3, [r0, #28]
 180:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 255              		.loc 1 180 3 is_stmt 1 view .LVU69
 180:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 256              		.loc 1 180 28 is_stmt 0 view .LVU70
 257 001e 0362     		str	r3, [r0, #32]
 181:Core/Src/main.c ****   {
 258              		.loc 1 181 3 is_stmt 1 view .LVU71
 181:Core/Src/main.c ****   {
 259              		.loc 1 181 7 is_stmt 0 view .LVU72
 260 0020 FFF7FEFF 		bl	HAL_I2C_Init
 261              	.LVL3:
 181:Core/Src/main.c ****   {
 262              		.loc 1 181 6 discriminator 1 view .LVU73
 263 0024 00B9     		cbnz	r0, .L10
 189:Core/Src/main.c **** 
 264              		.loc 1 189 1 view .LVU74
 265 0026 08BD     		pop	{r3, pc}
 266              	.L10:
 183:Core/Src/main.c ****   }
 267              		.loc 1 183 5 is_stmt 1 view .LVU75
 268 0028 FFF7FEFF 		bl	Error_Handler
 269              	.LVL4:
 270              	.L12:
 271              		.align	2
 272              	.L11:
 273 002c 00000000 		.word	hi2c1
 274 0030 00540040 		.word	1073763328
 275 0034 A0860100 		.word	100000
 276              		.cfi_endproc
 277              	.LFE132:
 279              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 280              		.align	1
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 285              	MX_USART2_UART_Init:
 286              	.LFB133:
 197:Core/Src/main.c **** 
 287              		.loc 1 197 1 view -0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 08B5     		push	{r3, lr}
 292              	.LCFI4:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 3, -8
 295              		.cfi_offset 14, -4
 206:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 296              		.loc 1 206 3 view .LVU77
 206:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 297              		.loc 1 206 19 is_stmt 0 view .LVU78
 298 0002 0A48     		ldr	r0, .L17
 299 0004 0A4B     		ldr	r3, .L17+4
 300 0006 0360     		str	r3, [r0]
 207:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 301              		.loc 1 207 3 is_stmt 1 view .LVU79
ARM GAS  /tmp/ccgFIVOt.s 			page 14


 207:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 302              		.loc 1 207 24 is_stmt 0 view .LVU80
 303 0008 4FF4E133 		mov	r3, #115200
 304 000c 4360     		str	r3, [r0, #4]
 208:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 305              		.loc 1 208 3 is_stmt 1 view .LVU81
 208:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 306              		.loc 1 208 26 is_stmt 0 view .LVU82
 307 000e 0023     		movs	r3, #0
 308 0010 8360     		str	r3, [r0, #8]
 209:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 309              		.loc 1 209 3 is_stmt 1 view .LVU83
 209:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 310              		.loc 1 209 24 is_stmt 0 view .LVU84
 311 0012 C360     		str	r3, [r0, #12]
 210:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 312              		.loc 1 210 3 is_stmt 1 view .LVU85
 210:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 313              		.loc 1 210 22 is_stmt 0 view .LVU86
 314 0014 0361     		str	r3, [r0, #16]
 211:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 315              		.loc 1 211 3 is_stmt 1 view .LVU87
 211:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 316              		.loc 1 211 20 is_stmt 0 view .LVU88
 317 0016 0C22     		movs	r2, #12
 318 0018 4261     		str	r2, [r0, #20]
 212:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 319              		.loc 1 212 3 is_stmt 1 view .LVU89
 212:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 320              		.loc 1 212 25 is_stmt 0 view .LVU90
 321 001a 8361     		str	r3, [r0, #24]
 213:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 322              		.loc 1 213 3 is_stmt 1 view .LVU91
 213:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 323              		.loc 1 213 28 is_stmt 0 view .LVU92
 324 001c C361     		str	r3, [r0, #28]
 214:Core/Src/main.c ****   {
 325              		.loc 1 214 3 is_stmt 1 view .LVU93
 214:Core/Src/main.c ****   {
 326              		.loc 1 214 7 is_stmt 0 view .LVU94
 327 001e FFF7FEFF 		bl	HAL_UART_Init
 328              	.LVL5:
 214:Core/Src/main.c ****   {
 329              		.loc 1 214 6 discriminator 1 view .LVU95
 330 0022 00B9     		cbnz	r0, .L16
 222:Core/Src/main.c **** 
 331              		.loc 1 222 1 view .LVU96
 332 0024 08BD     		pop	{r3, pc}
 333              	.L16:
 216:Core/Src/main.c ****   }
 334              		.loc 1 216 5 is_stmt 1 view .LVU97
 335 0026 FFF7FEFF 		bl	Error_Handler
 336              	.LVL6:
 337              	.L18:
 338 002a 00BF     		.align	2
 339              	.L17:
 340 002c 00000000 		.word	huart2
ARM GAS  /tmp/ccgFIVOt.s 			page 15


 341 0030 00440040 		.word	1073759232
 342              		.cfi_endproc
 343              	.LFE133:
 345              		.section	.text.SystemClock_Config,"ax",%progbits
 346              		.align	1
 347              		.global	SystemClock_Config
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 352              	SystemClock_Config:
 353              	.LFB131:
 116:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 354              		.loc 1 116 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 80
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358 0000 00B5     		push	{lr}
 359              	.LCFI5:
 360              		.cfi_def_cfa_offset 4
 361              		.cfi_offset 14, -4
 362 0002 95B0     		sub	sp, sp, #84
 363              	.LCFI6:
 364              		.cfi_def_cfa_offset 88
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 365              		.loc 1 117 3 view .LVU99
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 366              		.loc 1 117 22 is_stmt 0 view .LVU100
 367 0004 3022     		movs	r2, #48
 368 0006 0021     		movs	r1, #0
 369 0008 08A8     		add	r0, sp, #32
 370 000a FFF7FEFF 		bl	memset
 371              	.LVL7:
 118:Core/Src/main.c **** 
 372              		.loc 1 118 3 is_stmt 1 view .LVU101
 118:Core/Src/main.c **** 
 373              		.loc 1 118 22 is_stmt 0 view .LVU102
 374 000e 0023     		movs	r3, #0
 375 0010 0393     		str	r3, [sp, #12]
 376 0012 0493     		str	r3, [sp, #16]
 377 0014 0593     		str	r3, [sp, #20]
 378 0016 0693     		str	r3, [sp, #24]
 379 0018 0793     		str	r3, [sp, #28]
 122:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 380              		.loc 1 122 3 is_stmt 1 view .LVU103
 381              	.LBB10:
 122:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 382              		.loc 1 122 3 view .LVU104
 383 001a 0193     		str	r3, [sp, #4]
 122:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 384              		.loc 1 122 3 view .LVU105
 385 001c 1F4A     		ldr	r2, .L25
 386 001e 116C     		ldr	r1, [r2, #64]
 387 0020 41F08051 		orr	r1, r1, #268435456
 388 0024 1164     		str	r1, [r2, #64]
 122:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 389              		.loc 1 122 3 view .LVU106
 390 0026 126C     		ldr	r2, [r2, #64]
ARM GAS  /tmp/ccgFIVOt.s 			page 16


 391 0028 02F08052 		and	r2, r2, #268435456
 392 002c 0192     		str	r2, [sp, #4]
 122:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 393              		.loc 1 122 3 view .LVU107
 394 002e 019A     		ldr	r2, [sp, #4]
 395              	.LBE10:
 122:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 396              		.loc 1 122 3 view .LVU108
 123:Core/Src/main.c **** 
 397              		.loc 1 123 3 view .LVU109
 398              	.LBB11:
 123:Core/Src/main.c **** 
 399              		.loc 1 123 3 view .LVU110
 400 0030 0293     		str	r3, [sp, #8]
 123:Core/Src/main.c **** 
 401              		.loc 1 123 3 view .LVU111
 402 0032 1B49     		ldr	r1, .L25+4
 403 0034 0A68     		ldr	r2, [r1]
 404 0036 22F44042 		bic	r2, r2, #49152
 405 003a 42F40042 		orr	r2, r2, #32768
 406 003e 0A60     		str	r2, [r1]
 123:Core/Src/main.c **** 
 407              		.loc 1 123 3 view .LVU112
 408 0040 0A68     		ldr	r2, [r1]
 409 0042 02F44042 		and	r2, r2, #49152
 410 0046 0292     		str	r2, [sp, #8]
 123:Core/Src/main.c **** 
 411              		.loc 1 123 3 view .LVU113
 412 0048 029A     		ldr	r2, [sp, #8]
 413              	.LBE11:
 123:Core/Src/main.c **** 
 414              		.loc 1 123 3 view .LVU114
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 415              		.loc 1 128 3 view .LVU115
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 416              		.loc 1 128 36 is_stmt 0 view .LVU116
 417 004a 0221     		movs	r1, #2
 418 004c 0891     		str	r1, [sp, #32]
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 419              		.loc 1 129 3 is_stmt 1 view .LVU117
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 420              		.loc 1 129 30 is_stmt 0 view .LVU118
 421 004e 0122     		movs	r2, #1
 422 0050 0B92     		str	r2, [sp, #44]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 423              		.loc 1 130 3 is_stmt 1 view .LVU119
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 424              		.loc 1 130 41 is_stmt 0 view .LVU120
 425 0052 1022     		movs	r2, #16
 426 0054 0C92     		str	r2, [sp, #48]
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 427              		.loc 1 131 3 is_stmt 1 view .LVU121
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 428              		.loc 1 131 34 is_stmt 0 view .LVU122
 429 0056 0E91     		str	r1, [sp, #56]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 430              		.loc 1 132 3 is_stmt 1 view .LVU123
ARM GAS  /tmp/ccgFIVOt.s 			page 17


 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 431              		.loc 1 132 35 is_stmt 0 view .LVU124
 432 0058 0F93     		str	r3, [sp, #60]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 433              		.loc 1 133 3 is_stmt 1 view .LVU125
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 434              		.loc 1 133 30 is_stmt 0 view .LVU126
 435 005a 1092     		str	r2, [sp, #64]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 436              		.loc 1 134 3 is_stmt 1 view .LVU127
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 437              		.loc 1 134 30 is_stmt 0 view .LVU128
 438 005c 4FF4A873 		mov	r3, #336
 439 0060 1193     		str	r3, [sp, #68]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 440              		.loc 1 135 3 is_stmt 1 view .LVU129
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 441              		.loc 1 135 30 is_stmt 0 view .LVU130
 442 0062 0423     		movs	r3, #4
 443 0064 1293     		str	r3, [sp, #72]
 136:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 444              		.loc 1 136 3 is_stmt 1 view .LVU131
 136:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 445              		.loc 1 136 30 is_stmt 0 view .LVU132
 446 0066 0723     		movs	r3, #7
 447 0068 1393     		str	r3, [sp, #76]
 137:Core/Src/main.c ****   {
 448              		.loc 1 137 3 is_stmt 1 view .LVU133
 137:Core/Src/main.c ****   {
 449              		.loc 1 137 7 is_stmt 0 view .LVU134
 450 006a 08A8     		add	r0, sp, #32
 451 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 452              	.LVL8:
 137:Core/Src/main.c ****   {
 453              		.loc 1 137 6 discriminator 1 view .LVU135
 454 0070 80B9     		cbnz	r0, .L23
 144:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 455              		.loc 1 144 3 is_stmt 1 view .LVU136
 144:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 456              		.loc 1 144 31 is_stmt 0 view .LVU137
 457 0072 0F23     		movs	r3, #15
 458 0074 0393     		str	r3, [sp, #12]
 146:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 459              		.loc 1 146 3 is_stmt 1 view .LVU138
 146:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 460              		.loc 1 146 34 is_stmt 0 view .LVU139
 461 0076 0221     		movs	r1, #2
 462 0078 0491     		str	r1, [sp, #16]
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 463              		.loc 1 147 3 is_stmt 1 view .LVU140
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 464              		.loc 1 147 35 is_stmt 0 view .LVU141
 465 007a 0023     		movs	r3, #0
 466 007c 0593     		str	r3, [sp, #20]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 467              		.loc 1 148 3 is_stmt 1 view .LVU142
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccgFIVOt.s 			page 18


 468              		.loc 1 148 36 is_stmt 0 view .LVU143
 469 007e 4FF48052 		mov	r2, #4096
 470 0082 0692     		str	r2, [sp, #24]
 149:Core/Src/main.c **** 
 471              		.loc 1 149 3 is_stmt 1 view .LVU144
 149:Core/Src/main.c **** 
 472              		.loc 1 149 36 is_stmt 0 view .LVU145
 473 0084 0793     		str	r3, [sp, #28]
 151:Core/Src/main.c ****   {
 474              		.loc 1 151 3 is_stmt 1 view .LVU146
 151:Core/Src/main.c ****   {
 475              		.loc 1 151 7 is_stmt 0 view .LVU147
 476 0086 03A8     		add	r0, sp, #12
 477 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 478              	.LVL9:
 151:Core/Src/main.c ****   {
 479              		.loc 1 151 6 discriminator 1 view .LVU148
 480 008c 20B9     		cbnz	r0, .L24
 155:Core/Src/main.c **** 
 481              		.loc 1 155 1 view .LVU149
 482 008e 15B0     		add	sp, sp, #84
 483              	.LCFI7:
 484              		.cfi_remember_state
 485              		.cfi_def_cfa_offset 4
 486              		@ sp needed
 487 0090 5DF804FB 		ldr	pc, [sp], #4
 488              	.L23:
 489              	.LCFI8:
 490              		.cfi_restore_state
 139:Core/Src/main.c ****   }
 491              		.loc 1 139 5 is_stmt 1 view .LVU150
 492 0094 FFF7FEFF 		bl	Error_Handler
 493              	.LVL10:
 494              	.L24:
 153:Core/Src/main.c ****   }
 495              		.loc 1 153 5 view .LVU151
 496 0098 FFF7FEFF 		bl	Error_Handler
 497              	.LVL11:
 498              	.L26:
 499              		.align	2
 500              	.L25:
 501 009c 00380240 		.word	1073887232
 502 00a0 00700040 		.word	1073770496
 503              		.cfi_endproc
 504              	.LFE131:
 506              		.section	.text.main,"ax",%progbits
 507              		.align	1
 508              		.global	main
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 513              	main:
 514              	.LFB130:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 515              		.loc 1 70 1 view -0
 516              		.cfi_startproc
 517              		@ Volatile: function does not return.
ARM GAS  /tmp/ccgFIVOt.s 			page 19


 518              		@ args = 0, pretend = 0, frame = 64
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520 0000 00B5     		push	{lr}
 521              	.LCFI9:
 522              		.cfi_def_cfa_offset 4
 523              		.cfi_offset 14, -4
 524 0002 91B0     		sub	sp, sp, #68
 525              	.LCFI10:
 526              		.cfi_def_cfa_offset 72
  78:Core/Src/main.c **** 
 527              		.loc 1 78 3 view .LVU153
 528 0004 FFF7FEFF 		bl	HAL_Init
 529              	.LVL12:
  85:Core/Src/main.c **** 
 530              		.loc 1 85 3 view .LVU154
 531 0008 FFF7FEFF 		bl	SystemClock_Config
 532              	.LVL13:
  92:Core/Src/main.c ****   MX_I2C1_Init();
 533              		.loc 1 92 3 view .LVU155
 534 000c FFF7FEFF 		bl	MX_GPIO_Init
 535              	.LVL14:
  93:Core/Src/main.c ****   MX_USART2_UART_Init();
 536              		.loc 1 93 3 view .LVU156
 537 0010 FFF7FEFF 		bl	MX_I2C1_Init
 538              	.LVL15:
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 539              		.loc 1 94 3 view .LVU157
 540 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 541              	.LVL16:
  96:Core/Src/main.c ****   BME280_init(&bme, &hi2c1);
 542              		.loc 1 96 3 view .LVU158
  97:Core/Src/main.c ****   /* USER CODE END 2 */
 543              		.loc 1 97 3 view .LVU159
 544 0018 0249     		ldr	r1, .L30
 545 001a 01A8     		add	r0, sp, #4
 546 001c FFF7FEFF 		bl	BME280_init
 547              	.LVL17:
 548              	.L28:
 102:Core/Src/main.c ****   {
 549              		.loc 1 102 3 view .LVU160
 107:Core/Src/main.c ****   /* USER CODE END 3 */
 550              		.loc 1 107 3 view .LVU161
 102:Core/Src/main.c ****   {
 551              		.loc 1 102 9 view .LVU162
 552 0020 FEE7     		b	.L28
 553              	.L31:
 554 0022 00BF     		.align	2
 555              	.L30:
 556 0024 00000000 		.word	hi2c1
 557              		.cfi_endproc
 558              	.LFE130:
 560              		.global	huart2
 561              		.section	.bss.huart2,"aw",%nobits
 562              		.align	2
 565              	huart2:
 566 0000 00000000 		.space	68
 566      00000000 
ARM GAS  /tmp/ccgFIVOt.s 			page 20


 566      00000000 
 566      00000000 
 566      00000000 
 567              		.global	hi2c1
 568              		.section	.bss.hi2c1,"aw",%nobits
 569              		.align	2
 572              	hi2c1:
 573 0000 00000000 		.space	84
 573      00000000 
 573      00000000 
 573      00000000 
 573      00000000 
 574              		.text
 575              	.Letext0:
 576              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 577              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 578              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 579              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 580              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 581              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 582              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 583              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 584              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 585              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 586              		.file 13 "Core/Inc/BME280.h"
 587              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 588              		.file 15 "<built-in>"
ARM GAS  /tmp/ccgFIVOt.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccgFIVOt.s:21     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccgFIVOt.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccgFIVOt.s:165    .text.MX_GPIO_Init:0000009c $d
     /tmp/ccgFIVOt.s:172    .text.Error_Handler:00000000 $t
     /tmp/ccgFIVOt.s:178    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccgFIVOt.s:210    .text.MX_I2C1_Init:00000000 $t
     /tmp/ccgFIVOt.s:215    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
     /tmp/ccgFIVOt.s:273    .text.MX_I2C1_Init:0000002c $d
     /tmp/ccgFIVOt.s:572    .bss.hi2c1:00000000 hi2c1
     /tmp/ccgFIVOt.s:280    .text.MX_USART2_UART_Init:00000000 $t
     /tmp/ccgFIVOt.s:285    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/ccgFIVOt.s:340    .text.MX_USART2_UART_Init:0000002c $d
     /tmp/ccgFIVOt.s:565    .bss.huart2:00000000 huart2
     /tmp/ccgFIVOt.s:346    .text.SystemClock_Config:00000000 $t
     /tmp/ccgFIVOt.s:352    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccgFIVOt.s:501    .text.SystemClock_Config:0000009c $d
     /tmp/ccgFIVOt.s:507    .text.main:00000000 $t
     /tmp/ccgFIVOt.s:513    .text.main:00000000 main
     /tmp/ccgFIVOt.s:556    .text.main:00000024 $d
     /tmp/ccgFIVOt.s:562    .bss.huart2:00000000 $d
     /tmp/ccgFIVOt.s:569    .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_I2C_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
BME280_init
